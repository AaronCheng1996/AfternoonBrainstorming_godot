[gd_scene load_steps=2 format=3 uid="uid://cc8vwfquxrwi7"]

[sub_resource type="GDScript" id="GDScript_7qxio"]
script/source = "extends Control


# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	print(get_tree().root.get_children())
	pass # Replace with function body.

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass

func _on_btn_quit_pressed() -> void:
	get_tree().quit()

func _on_btn_pvp_pressed() -> void:
	var deck_scene = preload(\"res://scenes/deck_build.tscn\").instantiate()
	get_tree().current_scene = deck_scene
	get_tree().root.add_child(deck_scene)

func _on_btn_cpu_pressed() -> void:
	get_tree().change_scene_to_file(\"res://scenes/deck_build.tscn\")
"

[node name="Main" type="Control"]
custom_minimum_size = Vector2(1024, 768)
layout_mode = 3
anchors_preset = 0
script = SubResource("GDScript_7qxio")

[node name="background" type="ColorRect" parent="."]
custom_minimum_size = Vector2(1024, 768)
layout_mode = 1
offset_right = 1024.0
offset_bottom = 768.0
color = Color(0.219608, 0.219608, 0.219608, 1)

[node name="btn_pvp" type="Button" parent="."]
layout_mode = 0
offset_left = 412.0
offset_top = 450.0
offset_right = 612.0
offset_bottom = 510.0
text = "Start"

[node name="btn_cpu" type="Button" parent="."]
visible = false
layout_mode = 0
offset_left = 450.0
offset_top = 260.0
offset_right = 700.0
offset_bottom = 340.0
text = "Computer"

[node name="btn_quit" type="Button" parent="."]
layout_mode = 0
offset_left = 412.0
offset_top = 550.0
offset_right = 612.0
offset_bottom = 610.0
text = "Quit
"

[node name="Label" type="Label" parent="."]
layout_mode = 0
offset_right = 1024.0
offset_bottom = 500.0
theme_override_constants/outline_size = 20
theme_override_font_sizes/font_size = 120
text = "Afternoon
Brainstorm"
horizontal_alignment = 1
vertical_alignment = 1

[connection signal="pressed" from="btn_pvp" to="." method="_on_btn_pvp_pressed"]
[connection signal="pressed" from="btn_cpu" to="." method="_on_btn_cpu_pressed"]
[connection signal="pressed" from="btn_quit" to="." method="_on_btn_quit_pressed"]
